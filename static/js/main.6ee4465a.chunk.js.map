{"version":3,"sources":["components/Conversations/Chat/Chat.module.css","components/RequestPreview/RequestPreview.module.css","components/Shared/Button/Button.module.css","components/Shared/Input/Input.module.css","components/Login/Login.module.css","components/Shared/Header/Header.module.css","components/Layout/Layout.module.css","components/Menu/Menu.module.css","components/Shared/Select/Select.module.css","components/Shared/Icons/ArrowTopIcon.module.css","components/Shared/Loader/Loader.module.css","components/Conversations/Conversations.module.css","routes/index.js","components/Shared/Input/Input.js","components/Shared/Typography/Typography.js","components/Shared/Loader/Loader.js","components/Shared/Button/Button.js","helpers/localStorage.js","api/core/request.js","api/auth.js","components/Login/useAuth.js","components/Login/Login.js","pages/login.js","components/Layout/Layout.js","routes/AppRoute.js","components/Menu/Menu.js","pages/menu.js","components/Shared/Header/Header.js","api/projects.js","components/MaintenanceRequest/useMaintenanceRequest.js","components/MaintenanceRequest/MaintenanceRequest.js","pages/maintenance-request.js","components/RequestPreview/RequestPreviewContent.js","components/RequestPreview/RequestPreviewCompanies.js","components/RequestPreview/RequestPreviewButtons.js","components/RequestPreview/RequestPreview.js","components/RequestPreview/usePreviewRequest.js","pages/request-preview.js","components/Shared/Select/Select.js","components/Conversations/Chat/Message.js","components/Conversations/Chat/ChatDialog.js","components/Shared/Icons/ArrowTopIcon.js","components/Conversations/Chat/ChatInput.js","components/Conversations/Chat/Chat.js","components/Conversations/useConversations.js","components/Conversations/useProjects.js","components/Conversations/useCompanies.js","components/Conversations/useMessages.js","components/Conversations/Conversations.js","pages/conversations.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","routes","Input","name","value","label","onChange","rounded","type","className","min","max","multiline","required","props","accept","clsx","styles","inputWrapper","htmlFor","rows","input","Typography","variant","children","TagComponent","Loader","size","loader","style","minWidth","minHeight","Button","linkTo","color","outlined","onClick","small","fullWidth","loading","disabled","to","Link","button","secondary","localStorageKeys","loadState","key","serializedState","localStorage","getItem","JSON","parse","e","saveState","state","stringify","setItem","console","log","removeState","removeItem","request","axios","create","baseURL","interceptors","use","config","headers","Authorization","refreshTokenInProgress","response","error","a","originalRequest","status","_retry","refreshToken","authAPI","result","data","access","defaults","common","url","token","window","location","href","Promise","reject","endpoints","login","credentials","method","withCredentials","logout","refresh_token","verifyToken","refresh","useAuth","history","useHistory","useState","email","password","setCredentials","setError","setLoading","onCredentialsChange","target","onLogin","preventDefault","push","onLogout","Login","loginInner","onSubmit","LoginPage","Layout","pathname","useLocation","isOuterPage","useEffect","scrollTo","layout","outerPage","AppRoute","Component","component","rest","isAuthProtected","path","accessToken","isLogin","render","from","Menu","menu","MenuPage","Header","title","hasBackBtn","header","noTitle","link","projectId","companyId","projectsAPI","formData","send_confirmed","message","project_id","company_id","getUnderscoreKey","MaintenanceRequest","jobType","numRequests","address","city","zipCode","requestData","setRequestData","file","setFile","FormData","Object","keys","map","append","companies","id","onInputChange","files","length","useMaintenanceRequest","photo","MaintenanceRequestPage","RequestPreviewContent","vendorName","description","content","RequestPreviewCompanies","company","join","RequestPreviewButtons","conversationCreated","onCancel","success","buttons","RequestPreview","setConversationCreated","handleSubmit","usePreviewRequest","requestPreview","RequestPreviewPage","Select","options","selectWrapper","select","ix","Message","memo","text","created","author","messageWrapper","system","messageDate","messageInner","propTypes","PropTypes","string","isRequired","ChatDialog","messages","chatDialog","body","index","array","ArrowTopIcon","enableBackground","version","viewBox","xmlns","icon","points","x1","x2","y1","y2","ChatInput","inputMessage","onMessageSend","chatInputWrapper","placeholder","chatInput","chatInputBtn","Chat","chat","useConversations","setData","projects","setProjects","results","useProjects","setCompanies","found","filter","project","useCompanies","setMessages","fetchMessages","p","some","c","useMessages","formatProjectsOptions","job_type","date","split","reverse","Conversations","ConversationsPage","App","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ee4465a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"Chat_chat__2u7Jk\",\"chatDialog\":\"Chat_chatDialog__28R7F\",\"messageDate\":\"Chat_messageDate__2tW76\",\"messageWrapper\":\"Chat_messageWrapper__3FwTq\",\"system\":\"Chat_system__2E5I6\",\"messageInner\":\"Chat_messageInner__21H30\",\"message\":\"Chat_message__3liDM\",\"chatInputWrapper\":\"Chat_chatInputWrapper__flLAS\",\"chatInput\":\"Chat_chatInput__3DKoW\",\"chatInputBtn\":\"Chat_chatInputBtn__1OfIq\",\"disabled\":\"Chat_disabled__tPetR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"requestPreview\":\"RequestPreview_requestPreview__2IS_h\",\"content\":\"RequestPreview_content__3T-9t\",\"companies\":\"RequestPreview_companies__2ZCnj\",\"success\":\"RequestPreview_success__4955J\",\"buttons\":\"RequestPreview_buttons__32SVC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2yEWV\",\"fullWidth\":\"Button_fullWidth__3hknv\",\"small\":\"Button_small__2zoRr\",\"disabled\":\"Button_disabled__2S9WB\",\"outlined\":\"Button_outlined__1rgp3\",\"rounded\":\"Button_rounded__sM0i2\",\"secondary\":\"Button_secondary__sQ3Y-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"Input_inputWrapper__1cyZ-\",\"input\":\"Input_input__Ds14m\",\"rounded\":\"Input_rounded__3mTpo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2-oiK\",\"loginInner\":\"Login_loginInner__3iaN5\",\"error\":\"Login_error__1KjdW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1qtII\",\"noTitle\":\"Header_noTitle__384yo\",\"link\":\"Header_link__3Di1v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__1kIUs\",\"outerPage\":\"Layout_outerPage__osTRb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__1ejUb\",\"loginInner\":\"Menu_loginInner__1sqjD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectWrapper\":\"Select_selectWrapper__2b-lm\",\"select\":\"Select_select__2bcEd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"ArrowTopIcon_icon__27amD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3L0H_\",\"lds-dual-ring\":\"Loader_lds-dual-ring__3wIeg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectWrapper\":\"Conversations_selectWrapper__2t6su\"};","export const routes = {\r\n    home: '/',\r\n    login: '/login',\r\n    maintenanceRequest: '/maintenance-request',\r\n    requestPreview: '/request-preview',\r\n    conversations: '/conversations',\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Input.module.css';\r\nimport clsx from \"clsx\";\r\n\r\nexport const Input = ({name, value, label, onChange, rounded = false, type = 'text', className = '', min = 0, max = 20, multiline, required}) => {\r\n    let props = {};\r\n    if(type === 'file') props.accept=\"image/*\";\r\n    return (\r\n        <div className={clsx(styles.inputWrapper, {\r\n            [styles.rounded]: rounded\r\n        }, className)}>\r\n            <label htmlFor=\"\">{label}</label>\r\n            {!multiline ?\r\n                <input required={required} {...props} min={min} max={max} type={type} name={name} value={value} onChange={onChange}\r\n                       className={clsx(styles.input)}/> :\r\n                <textarea required={required} rows={5} name={name} value={value} onChange={onChange}\r\n                          className={clsx(styles.input)}/>}\r\n        </div>\r\n    )\r\n};\r\nInput.propTypes = {\r\n    required: PropTypes.bool,\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    onChange: PropTypes.func.isRequired,\r\n    rounded: PropTypes.bool,\r\n    type: PropTypes.string,\r\n    className: PropTypes.string,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Typography = ({variant = 'h1', children, className = ''}) => {\r\n    const TagComponent = variant;\r\n    return <TagComponent className={className}>{children}</TagComponent>\r\n}\r\n\r\nTypography.propTypes = {\r\n    variant: PropTypes.string,\r\n    children: PropTypes.any.isRequired,\r\n    className: PropTypes.string,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Loader.module.css';\r\n\r\nexport const Loader = ({size = 24}) => (<div className={styles.loader} style={{minWidth: size, minHeight: size}}/>);\r\n\r\nLoader.propTypes = {\r\n    size: PropTypes.number\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from \"clsx\";\r\nimport {Link} from \"react-router-dom\";\r\nimport styles from './Button.module.css';\r\nimport {Loader} from \"../Loader/Loader\";\r\n\r\nexport const Button = (\r\n    {label, linkTo = '', color = 'primary', rounded = false, outlined = false, onClick, className = '', small = false, fullWidth = true, loading, disabled = false}) => {\r\n    let props = {};\r\n    if (onClick) props.onClick = onClick;\r\n    if (linkTo) props.to = linkTo;\r\n\r\n    const TagComponent = linkTo ? Link : 'button';\r\n\r\n    return <TagComponent disabled={disabled} {...props} className={clsx(styles.button, className, {\r\n        [styles.rounded]: rounded,\r\n        [styles.outlined]: outlined,\r\n        [styles.small]: small,\r\n        [styles.fullWidth]: fullWidth,\r\n        [styles.secondary]: color === 'secondary',\r\n        [styles.disabled]: disabled\r\n    })}>\r\n        <span className={'flexCenter'}>{loading && <Loader/>}{label}</span>\r\n    </TagComponent>\r\n}\r\n\r\nButton.propTypes = {\r\n    loading: PropTypes.bool,\r\n    label: PropTypes.string.isRequired,\r\n    color: PropTypes.oneOf(['secondary', 'primary']),\r\n    rounded: PropTypes.bool,\r\n    outlined: PropTypes.bool,\r\n    onClick: PropTypes.func,\r\n    small: PropTypes.bool\r\n};","const localStorageKeys = {\r\n    accessToken: 'accessToken',\r\n    refreshToken: 'refreshToken'\r\n}\r\nconst loadState = (key) => {\r\n    try {\r\n        const serializedState = localStorage.getItem(key);\r\n        if (serializedState === null) {\r\n            return undefined;\r\n        }\r\n        return JSON.parse(serializedState);\r\n    } catch (e) {\r\n        return undefined;\r\n    }\r\n};\r\n\r\nconst saveState = (key, state) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem(key, serializedState);\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n};\r\n\r\nconst removeState = (key) => {\r\n    localStorage.removeItem(key);\r\n};\r\nexport {\r\n    localStorageKeys,\r\n    loadState,\r\n    saveState,\r\n    removeState\r\n}","import axios from 'axios';\r\nimport {loadState, localStorageKeys, removeState, saveState} from \"../../helpers/localStorage\";\r\nimport {authAPI} from \"../auth\";\r\nimport {routes} from \"../../routes\";\r\n\r\nconst baseUrl = 'https://beta.mellobee.com/api';\r\n\r\nconst request = axios.create({\r\n    baseURL: baseUrl\r\n});\r\n// Add a request interceptor\r\nrequest.interceptors.request.use((config) => {\r\n    config.headers.Authorization = `Bearer ${loadState('accessToken')}`\r\n    return config;\r\n});\r\n// Response interceptor for API calls\r\nlet refreshTokenInProgress = null;// this holds any in-progress token refresh requests\r\nrequest.interceptors.response.use((response) => {\r\n    return response\r\n}, async function (error) {\r\n    const originalRequest = error.config;\r\n    if ((error.response.status === 403 || error.response.status === 401) && !originalRequest._retry) {\r\n        originalRequest._retry = true;\r\n        if (!refreshTokenInProgress) { // check for an existing in-progress request\r\n            const refreshToken = loadState(localStorageKeys.refreshToken);\r\n            try {\r\n                refreshTokenInProgress = true;\r\n                const result = await authAPI.refreshToken(refreshToken);\r\n                refreshTokenInProgress = null;\r\n\r\n                if (result?.data?.access) {\r\n                    saveState(localStorageKeys.accessToken, result.data.access);\r\n                    request.defaults.headers.common['Authorization'] = 'Bearer ' + result.data.access;\r\n\r\n                    if (originalRequest.url === '/token/verify/') {\r\n                        originalRequest.data = JSON.stringify({token: result.data.access});\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                console.log(e);\r\n                removeState(localStorageKeys.accessToken);\r\n                removeState(localStorageKeys.refreshToken);\r\n                return window.location.href = routes.login;\r\n            }\r\n        }\r\n        return request(originalRequest);\r\n    }\r\n    return Promise.reject(error);\r\n});\r\nexport {request};\r\n","import {request} from \"./core/request\";\r\n\r\nconst endpoints = {\r\n    login: `/token/`,\r\n    logout: `/logout/`,\r\n    verifyToken: `/token/verify/`,\r\n    refreshToken: `/token/refresh/`\r\n}\r\nexport const authAPI = {\r\n    login: credentials =>\r\n        request({\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            withCredentials: true,\r\n            url: endpoints.login,\r\n            data: credentials\r\n        }),\r\n    logout: refreshToken =>\r\n        request({\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            withCredentials: true,\r\n            url: endpoints.logout,\r\n            data: {\r\n                refresh_token: refreshToken\r\n            }\r\n        }),\r\n    verifyToken: token =>\r\n        request({\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            withCredentials: true,\r\n            url: endpoints.verifyToken,\r\n            data: {\r\n                token\r\n            }\r\n        }),\r\n    refreshToken: (refreshToken) =>\r\n        request({\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            withCredentials: true,\r\n            url: endpoints.refreshToken,\r\n            data: {\r\n                refresh: refreshToken\r\n            }\r\n        }),\r\n}","import {useState} from \"react\";\r\nimport {authAPI} from \"../../api/auth\";\r\nimport {removeState, saveState, localStorageKeys, loadState} from \"../../helpers/localStorage\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {routes} from \"../../routes\";\r\n\r\nexport const useAuth = () => {\r\n    const history = useHistory();\r\n    const [credentials, setCredentials] = useState({email: '', password: ''});\r\n    const [error, setError] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const handleInputChange = e => setCredentials({...credentials, [e.target.name]: e.target.value});\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            if (error) setError(false);\r\n            setLoading(true);\r\n            const result = await authAPI.login(credentials);\r\n            if (result?.data?.access && result?.data?.refresh) {\r\n                saveState(localStorageKeys.accessToken, result.data.access);\r\n                saveState(localStorageKeys.refreshToken, result.data.refresh);\r\n                history.push(routes.home);\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n            setError(true);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const handleLogout = async () => {\r\n        const refreshToken = loadState(localStorageKeys.refreshToken);\r\n        try {\r\n            await authAPI.logout(refreshToken);\r\n        } catch (e) {\r\n\r\n        } finally {\r\n            removeState(localStorageKeys.accessToken);\r\n            history.push(routes.login);\r\n        }\r\n\r\n    }\r\n    return {\r\n        loading,\r\n        credentials,\r\n        error,\r\n        onCredentialsChange: handleInputChange,\r\n        onLogin: handleLogin,\r\n        onLogout: handleLogout\r\n    }\r\n}","import React from 'react';\r\nimport {Input} from \"../Shared/Input/Input\";\r\nimport styles from './Login.module.css';\r\nimport clsx from \"clsx\";\r\n\r\nimport {Typography} from \"../Shared/Typography/Typography\";\r\nimport {Button} from \"../Shared/Button/Button\";\r\nimport {useAuth} from \"./useAuth\";\r\n\r\nexport const Login = () => {\r\n    const {credentials, loading, error, onCredentialsChange, onLogin} = useAuth();\r\n    const {email, password} = credentials;\r\n    return (\r\n        <div className={clsx(styles.login, 'flexCenter')}>\r\n            <form className={styles.loginInner} onSubmit={onLogin}>\r\n                <Typography variant={'h3'}>Welcome!</Typography>\r\n                <Typography className='mb-3'>Sign In</Typography>\r\n                <Input\r\n                    rounded\r\n                    onChange={onCredentialsChange}\r\n                    value={email}\r\n                    name='email'\r\n                    type={`email`}\r\n                    label='E-Mail or Username'\r\n                    className='mb-3'/>\r\n                <Input\r\n                    rounded\r\n                    onChange={onCredentialsChange}\r\n                    value={password}\r\n                    name='password'\r\n                    label='Password'\r\n                    type='password'\r\n                    className='mb-3'/>\r\n                {error && <div className={clsx(styles.error, 'mb-1')}>Wrong username or password</div>}\r\n                <Button label={'Log In'} rounded loading={loading}/>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\n","import React from 'react';\r\nimport {Login} from \"../components/Login/Login\";\r\n\r\nexport const LoginPage = () => {\r\n    return (\r\n        <Login/>\r\n    )\r\n}","import React, {useEffect} from 'react';\r\nimport {useLocation} from \"react-router-dom\";\r\nimport styles from './Layout.module.css';\r\nimport {routes} from \"../../routes\";\r\nimport clsx from \"clsx\";\r\n\r\nexport const Layout = ({children}) => {\r\n    let {pathname} = useLocation();\r\n    const isOuterPage = pathname === routes.home || pathname === routes.login;\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n    return (\r\n        <div>\r\n            <main className={clsx(styles.layout, {[styles.outerPage]: isOuterPage})}>{children}</main>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect, Route} from 'react-router-dom';\r\nimport { Layout } from '../components/Layout/Layout';\r\n// import {useProtectedRoute} from \"./useProtectedRoute\";\r\nimport {routes} from \"./index\";\r\nimport {loadState, localStorageKeys} from \"../helpers/localStorage\";\r\n\r\nexport const AppRoute = ({ component: Component, isAuthProtected = true, ...rest }) => {\r\n    const {path} = rest;\r\n    const accessToken = loadState(localStorageKeys.accessToken);\r\n    // const {loading} = useProtectedRoute(accessToken, path);\r\n    const isLogin = path === routes.login;\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => {\r\n                if (!accessToken && !isLogin) {\r\n                    return (\r\n                        <Redirect\r\n                            to={{pathname: routes.login, state: {from: props.location}}}\r\n                        />\r\n                    )\r\n                }\r\n                if (accessToken && isLogin) {\r\n                    return (\r\n                        <Redirect\r\n                            to={{pathname: routes.home, state: {from: props.location}}}\r\n                        />\r\n                    )\r\n                }\r\n\r\n                // if (loading && token) return <div>Loading...</div>\r\n                return (\r\n                    <Layout>\r\n                        <Component {...rest} {...props} />\r\n                    </Layout>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\nAppRoute.propTypes = {\r\n    component: PropTypes.any,\r\n    isAuthProtected: PropTypes.bool\r\n};\r\n","import React from 'react';\r\nimport styles from './Menu.module.css';\r\nimport clsx from \"clsx\";\r\nimport {Typography} from \"../Shared/Typography/Typography\";\r\nimport {Button} from \"../Shared/Button/Button\";\r\nimport {routes} from \"../../routes\";\r\nimport {useAuth} from \"../Login/useAuth\";\r\n\r\nexport const Menu = () => {\r\n    const user = 'Lisa';\r\n    const {onLogout} = useAuth();\r\n    return <div className={clsx(styles.menu, 'flexCenter')}>\r\n        <div className={styles.loginInner}>\r\n            <Typography variant={'h3'}>Welcome {user}!</Typography>\r\n            <Typography className='mb-3'>Menu</Typography>\r\n            <Button linkTo={routes.maintenanceRequest} label={'Submit A Request'} rounded className='mb-3'/>\r\n            <Button linkTo={routes.conversations} label={'View Conversations'} rounded className='mb-3'/>\r\n            <Button label={'Log Out'} onClick={onLogout} rounded outlined/>\r\n        </div>\r\n    </div>\r\n};","import React from 'react';\r\nimport {Menu} from \"../components/Menu/Menu\";\r\n\r\nexport const MenuPage = () => {\r\n    return <Menu/>\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Header.module.css';\r\nimport {Typography} from \"../Typography/Typography\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {routes} from \"../../../routes\";\r\nimport clsx from \"clsx\";\r\n\r\n\r\nexport const Header = ({title, hasBackBtn = true}) => {\r\n    return (\r\n        <header className={clsx('flexCenter', styles.header, 'mb-3', {\r\n            [styles.noTitle]: !title\r\n        })}>\r\n            {title && <Typography variant='h2'>{title}</Typography>}\r\n            {hasBackBtn && <Link to={routes.home} className={styles.link}>Return to Home</Link>}\r\n        </header>\r\n    )\r\n}\r\nHeader.propTypes = {\r\n    title: PropTypes.string,\r\n    hasBackBtn: PropTypes.bool\r\n}","import {request} from \"./core/request\";\r\n\r\nconst endpoints = {\r\n    getProjects: `/project/`,\r\n    createProject: `/project/`,\r\n    createConversation: projectId => `/project/${projectId}/`,\r\n    getMessages: (projectId, companyId) => `/project/${projectId}/company/${companyId}/`,\r\n    sendMessage: (projectId, companyId) => `/project/${projectId}/company/${companyId}/`\r\n}\r\nexport const projectsAPI = {\r\n    getProjects: () =>\r\n        request({\r\n            method: 'get',\r\n            url: endpoints.getProjects,\r\n        }),\r\n    createProject: (formData) =>\r\n        request({\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n            withCredentials: true,\r\n            url: endpoints.createProject,\r\n            data: formData\r\n        }),\r\n    createConversation: (projectId) =>\r\n        request({\r\n            method: 'patch',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            withCredentials: true,\r\n            url: endpoints.createConversation(projectId),\r\n            data: {send_confirmed: true}\r\n        }),\r\n\r\n    getMessages: (projectId, companyId) =>\r\n        request({\r\n            method: 'get',\r\n            url: endpoints.getMessages(projectId, companyId),\r\n        }),\r\n    sendMessage: (projectId, companyId, message) =>\r\n        request({\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            withCredentials: true,\r\n            url: endpoints.sendMessage(projectId, companyId),\r\n            data: {\r\n                message,\r\n                project_id: projectId,\r\n                company_id: companyId\r\n            }\r\n        })\r\n}","import {useHistory} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\nimport {projectsAPI} from \"../../api/projects\";\r\nimport {routes} from \"../../routes\";\r\n\r\nconst getUnderscoreKey = key => {\r\n    switch (key) {\r\n        case 'jobType':\r\n            return 'job_type';\r\n        case 'numRequests':\r\n            return 'num_requests';\r\n        case 'zipCode':\r\n            return 'zip_code';\r\n        default:\r\n            return key;\r\n    }\r\n}\r\nexport const useMaintenanceRequest = () => {\r\n    const history = useHistory();\r\n\r\n    const [requestData, setRequestData] = useState({\r\n        jobType: '',\r\n        numRequests: '1',\r\n        address: '',\r\n        city: '',\r\n        zipCode: '',\r\n        message: ''\r\n    });\r\n    const [file, setFile] = useState(null);\r\n\r\n    const handleInputChange = e => {\r\n        if (e.target.type === 'file' && e.target.files.length) {\r\n            return setFile(e.target.files[0]);\r\n        }\r\n        setRequestData({...requestData, [e.target.name]: e.target.value});\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let formData = new FormData();\r\n        Object.keys(requestData).map((key) => {\r\n            formData.append(getUnderscoreKey(key), requestData[key]);\r\n        })\r\n        if (file) {\r\n            formData.append(\"image\", file);\r\n        }\r\n        try {\r\n            let result = await projectsAPI.createProject(formData);\r\n\r\n            history.push({\r\n                pathname: routes.requestPreview,\r\n                state: {\r\n                    requestData: {\r\n                        ...requestData,\r\n                        companies: result.data?.companies,\r\n                    },\r\n                    projectId: result.data?.id\r\n                }\r\n            });\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n    return {\r\n        onSubmit: handleSubmit,\r\n        onInputChange: handleInputChange,\r\n        requestData\r\n    }\r\n}","import React from 'react';\r\nimport {Header} from \"../Shared/Header/Header\";\r\nimport {Input} from \"../Shared/Input/Input\";\r\nimport {Button} from \"../Shared/Button/Button\";\r\nimport {useMaintenanceRequest} from \"./useMaintenanceRequest\";\r\n\r\nexport const MaintenanceRequest = () => {\r\n    const {requestData, onSubmit, onInputChange} = useMaintenanceRequest();\r\n    const {jobType, numRequests, address, city, zipCode, message, photo} = requestData;\r\n    return (\r\n        <div>\r\n            <Header title={'Maintenance Request'}/>\r\n            <form onSubmit={onSubmit}>\r\n                <Input required onChange={onInputChange} value={jobType} name='jobType'\r\n                       label='Job Type (ex: handyman, plumber, electrician, AC repair, etc...)' className='mb-1'/>\r\n                <Input max='50' min='1' type='number' onChange={onInputChange} value={numRequests}\r\n                       name='numRequests'\r\n                       label='# of Requests (suggested 20, max 50)'\r\n                       className='mb-1'/>\r\n                <Input required onChange={onInputChange} value={address} name='address' label='Address'\r\n                       className='mb-1'/>\r\n                <Input required onChange={onInputChange} value={city} name='city' label='City' className='mb-1'/>\r\n                <Input required onChange={onInputChange} value={zipCode} name='zipCode' label='Zip Code'\r\n                       className='mb-1'/>\r\n                <Input required multiline onChange={onInputChange} value={message} name='message'\r\n                       label='Describe your issue in as much detail as possible:' className='mb-1'/>\r\n                <Input onChange={onInputChange} value={photo} name='photo' type='file'\r\n                       label='Upload a photo of the issue (Optional)' className='mb-3'/>\r\n                <Button label='Send Message' className='mb-3' small fullWidth={false}/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport {MaintenanceRequest} from \"../components/MaintenanceRequest/MaintenanceRequest\";\r\n\r\nexport const MaintenanceRequestPage = () => {\r\n\r\n    return (\r\n        <MaintenanceRequest/>\r\n    )\r\n}","import React from 'react';\r\nimport styles from './RequestPreview.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from \"clsx\";\r\n\r\nexport const RequestPreviewContent = ({vendorName, description, address, city}) => {\r\n\r\n    return (\r\n        <div className={clsx(styles.content, 'mb-3')}>\r\n            <p>Hello, is this {vendorName}? I got your info off Yelp. {description} I am located at {address} in {city}.</p>\r\n            <p>How much will this job cost, or if an in-person estimate is needed, how much is the estimate visit? When is your next availability?</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nRequestPreviewContent.propTypes = {\r\n    vendorName: PropTypes.string.isRequired,\r\n    description: PropTypes.any.isRequired,\r\n    address: PropTypes.string.isRequired,\r\n    city: PropTypes.string.isRequired,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './RequestPreview.module.css';\r\nimport clsx from \"clsx\";\r\n\r\nexport const RequestPreviewCompanies = ({companies}) =>\r\n    (<div className={clsx(styles.companies, 'mb-3')}>\r\n        <p className={'mb-2'}>Your request will be sent to the following companies:</p>\r\n        <div>{(companies || []).map(company => company.name).join(', ')}</div>\r\n    </div>);\r\n\r\nRequestPreviewCompanies.propTypes = {\r\n    companies: PropTypes.array.isRequired\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from \"clsx\";\r\nimport styles from \"./RequestPreview.module.css\";\r\nimport {Button} from \"../Shared/Button/Button\";\r\n\r\nexport const RequestPreviewButtons = ({disabled, conversationCreated, onSubmit, onCancel}) => (\r\n    <div>\r\n        {conversationCreated ?\r\n            <h4 className={clsx('mb-3 textCenter', styles.success)}>Your message has been sent successfully.</h4> :\r\n            <h4 className={'mb-3 textCenter'}>Are you ready to send your request?</h4>}\r\n        <div className={clsx('flexCenter', styles.buttons)}>\r\n            <Button onClick={onCancel} label={conversationCreated ? 'Home' : 'Cancel'} color={\"secondary\"}\r\n                    fullWidth={false} small/>\r\n            <Button disabled={disabled} onClick={onSubmit} label={conversationCreated ? 'See Chat' : 'Send'}\r\n                    fullWidth={false} small/>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nRequestPreviewButtons.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired\r\n};","import React, {useEffect} from 'react';\r\nimport {Header} from \"../Shared/Header/Header\";\r\nimport {RequestPreviewContent} from \"./RequestPreviewContent\";\r\nimport {RequestPreviewCompanies} from \"./RequestPreviewCompanies\";\r\nimport styles from './RequestPreview.module.css';\r\nimport {RequestPreviewButtons} from \"./RequestPreviewButtons\";\r\nimport {usePreviewRequest} from \"./usePreviewRequest\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {routes} from \"../../routes\";\r\n\r\nexport const RequestPreview = () => {\r\n    const {requestData, conversationCreated, onSubmit, onCancel} = usePreviewRequest();\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        if (!requestData) {\r\n            history.push(routes.home);\r\n        }\r\n    }, []);\r\n    if (!requestData) return null;\r\n    const {message, address, city, companies} = requestData;\r\n    const vendorName = companies.length > 0 ? companies[0].name : '';\r\n\r\n    return (\r\n        <div>\r\n            <Header title={'Your Request'} hasBackBtn={false}/>\r\n            <div className={styles.requestPreview}>\r\n                <RequestPreviewContent vendorName={vendorName} address={address} city={city} description={message}/>\r\n                <RequestPreviewCompanies companies={companies}/>\r\n            </div>\r\n            <RequestPreviewButtons onSubmit={onSubmit} onCancel={onCancel} disabled={!companies.length} conversationCreated={conversationCreated}/>\r\n        </div>\r\n    )\r\n}\r\n","import {useLocation, useHistory} from \"react-router-dom\";\r\nimport React, {useState} from \"react\";\r\nimport {projectsAPI} from \"../../api/projects\";\r\nimport {routes} from \"../../routes\";\r\n\r\nexport const usePreviewRequest = () => {\r\n    let location = useLocation();\r\n    let history = useHistory();\r\n    const [conversationCreated, setConversationCreated] = useState(false);\r\n    const handleSubmit = async () => {\r\n        if (location.state?.projectId) {\r\n            if (conversationCreated) {\r\n                return history.push(routes.conversations);\r\n            }\r\n            try {\r\n                await projectsAPI.createConversation(location.state?.projectId);\r\n                setConversationCreated(true);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n\r\n    }\r\n    const handleCancel = () => history.push(routes.home);\r\n    return {\r\n        requestData: location.state?.requestData || null,\r\n        conversationCreated,\r\n        onSubmit: handleSubmit,\r\n        onCancel: handleCancel\r\n    }\r\n}","import React from 'react';\r\nimport {RequestPreview} from \"../components/RequestPreview/RequestPreview\";\r\n\r\nexport const RequestPreviewPage = () => {\r\n    return <RequestPreview />\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Select.module.css';\r\nimport clsx from \"clsx\";\r\n\r\nexport const Select = ({name, value, label, onChange, className = '', options}) => {\r\n    return (\r\n        <div className={clsx(styles.selectWrapper, className)}>\r\n            <label htmlFor=\"\">{label}</label>\r\n            <select name={name} value={value} onChange={onChange}\r\n                    className={clsx(styles.select)}>\r\n                {(options || []).map(({id, name}, ix) =>\r\n                    <option key={`${name}${ix}`} value={id}>\r\n                        {name ? name : `Project ${ix + 1}`}\r\n                    </option>)}\r\n            </select>\r\n        </div>\r\n    )\r\n};\r\nSelect.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    onChange: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    className: PropTypes.string,\r\n};","import React, {memo} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Chat.module.css';\r\nimport clsx from \"clsx\";\r\n\r\nexport const Message = memo(({text, created, author}) => (\r\n    <div className={clsx(styles.messageWrapper, 'mb-1', {\r\n        [styles.system]: author === 'system'\r\n    })}>\r\n        <div className={clsx(styles.message)}>\r\n            <div className={styles.messageDate}>{created}</div>\r\n            <div className={clsx(styles.messageInner, 'mb-1')}>{text}</div>\r\n        </div>\r\n    </div>\r\n));\r\n\r\nMessage.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    created: PropTypes.string,\r\n    author: PropTypes.string\r\n};","import React, {memo} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Message} from \"./Message\";\r\nimport styles from './Chat.module.css';\r\n\r\nexport const ChatDialog = memo(({messages}) =>\r\n    <div className={styles.chatDialog}>\r\n        {(messages || []).map(({body, index, created, author}) =>\r\n            <Message key={`message${index}`} text={body} created={created} author={author}/>)}\r\n    </div>)\r\n\r\nChatDialog.propTypes = {\r\n    messages: PropTypes.array.isRequired\r\n};","import React from 'react';\r\nimport styles from './ArrowTopIcon.module.css'\r\nexport const ArrowTopIcon = () => (\r\n<svg enableBackground=\"new 0 0 64 64\" version=\"1.1\" viewBox=\"0 0 64 64\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n<polyline className={styles.icon} points=\"48 32.2 32 16.2 16 32.2\"/>\r\n<line className={styles.icon} x1=\"32\" x2=\"32\" y1=\"16.2\" y2=\"47.8\"/>\r\n</svg>\r\n\r\n)","import React, {memo} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Chat.module.css';\r\n\r\nimport {ArrowTopIcon} from \"../../Shared/Icons/ArrowTopIcon\";\r\nimport clsx from \"clsx\";\r\n\r\nexport const ChatInput = memo(({inputMessage, onChange, onMessageSend}) =>\r\n    (<form className={styles.chatInputWrapper} onSubmit={onMessageSend}>\r\n        <textarea\r\n            required\r\n            placeholder={'Type your message here...'}\r\n            rows={2} name='message'\r\n            value={inputMessage}\r\n            onChange={onChange}\r\n            className={styles.chatInput}/>\r\n        <button className={clsx(styles.chatInputBtn,{\r\n            [styles.disabled]: !inputMessage\r\n        })} disabled={!inputMessage}>\r\n            <ArrowTopIcon/>\r\n            <span>Send</span>\r\n        </button>\r\n    </form>));\r\n\r\nChatInput.propTypes = {\r\n    inputMessage: PropTypes.string.isRequired\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Chat.module.css';\r\nimport {ChatDialog} from \"./ChatDialog\";\r\nimport {ChatInput} from \"./ChatInput\";\r\n\r\nexport const Chat = ({messages, inputMessage, onChange, onMessageSend}) => (\r\n    <div className={styles.chat}>\r\n        <ChatDialog messages={messages} />\r\n        <ChatInput inputMessage={inputMessage} onChange={onChange} onMessageSend={onMessageSend}/>\r\n    </div>);\r\n\r\nChat.propTypes = {\r\n    messages: PropTypes.array.isRequired,\r\n    inputMessage: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n    onMessageSend: PropTypes.func.isRequired,\r\n};","import {useEffect, useState} from \"react\";\r\nimport {useProjects} from \"./useProjects\";\r\nimport {useCompanies} from \"./useCompanies\";\r\nimport {projectsAPI} from \"../../api/projects\";\r\nimport {useMessages} from \"./useMessages\";\r\n\r\nexport const useConversations = () => {\r\n    const [data, setData] = useState({\r\n        projectId: '',\r\n        companyId: '',\r\n        message: ''\r\n    });\r\n    const {projectId, companyId, message} = data;\r\n    const {projects} = useProjects();\r\n    const {companies} = useCompanies(projects, projectId);\r\n    const {messages, fetchMessages} = useMessages(projectId, companyId, projects);\r\n\r\n    useEffect(() => {\r\n        if (!projectId && projects.length > 0) {\r\n            if (projects[0].companies.length > 0) {\r\n                setData({\r\n                    ...data,\r\n                    projectId: projects[0].id,\r\n                    companyId: projects[0].companies[0].id\r\n                });\r\n            }\r\n        }\r\n    }, [projects, companies]);\r\n\r\n    useEffect(() => {\r\n        const found = projects.filter(p => p.id === +projectId);\r\n        if (found.length) {\r\n            setData({\r\n                ...data,\r\n                projectId: found[0].id,\r\n                companyId: found[0].companies[0].id\r\n            });\r\n        }\r\n    }, [data.projectId]);\r\n    // useCreateConversation(projectId);\r\n    const handleChange = e => setData({...data, [e.target.name]: e.target.value});\r\n    const handleMessageSend = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            await projectsAPI.sendMessage(projectId, companyId, message);\r\n            await fetchMessages();\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    return {\r\n        data,\r\n        onChange: handleChange,\r\n        onMessageSend: handleMessageSend,\r\n        projects,\r\n        companies,\r\n        messages\r\n    }\r\n}","import {useEffect, useState} from \"react\";\r\nimport {projectsAPI} from \"../../api/projects\";\r\n\r\nexport const useProjects = () => {\r\n    const [projects, setProjects] = useState([]);\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const result = await projectsAPI.getProjects();\r\n                if (result?.data?.results) {\r\n                    setProjects(result?.data?.results);\r\n                }\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        })();\r\n    }, []);\r\n    return {\r\n        projects\r\n    }\r\n}","import {useEffect, useState} from \"react\";\r\n\r\nexport const useCompanies = (projects, projectId) => {\r\n    const [companies, setCompanies] = useState([]);\r\n    useEffect(() => {\r\n        if (projectId && projects.length > 0) {\r\n            const found = projects.filter(project => project.id === +projectId);\r\n            if (found.length && found[0].companies.length > 0) {\r\n                setCompanies(found[0].companies);\r\n            }\r\n        }\r\n    }, [projects, projectId]);\r\n\r\n    return {\r\n        companies\r\n    }\r\n}","import {useEffect, useState} from \"react\";\r\nimport {projectsAPI} from \"../../api/projects\";\r\n\r\nexport const useMessages = (projectId, companyId, projects) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const fetchMessages = async () => {\r\n        try {\r\n            const found = projects.filter(p => p.id === +projectId && p.companies.some(c=>c.id === +companyId));\r\n\r\n            if (found.length > 0) {\r\n                const result = await projectsAPI.getMessages(projectId, companyId);\r\n                if (result?.data) {\r\n                    setMessages(result?.data);\r\n                }\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (projectId && companyId) {\r\n            fetchMessages();\r\n        }\r\n    }, [projectId, companyId]);\r\n    return {\r\n        messages,\r\n        fetchMessages\r\n    }\r\n}","import React from 'react';\r\n\r\nimport {Header} from \"../Shared/Header/Header\";\r\nimport {Select} from \"../Shared/Select/Select\"\r\nimport {Chat} from \"./Chat/Chat\";\r\nimport styles from './Conversations.module.css';\r\nimport {useConversations} from \"./useConversations\";\r\n\r\nconst formatDate = date => date? date.split('T')[0].split('-').reverse().join('/') : '';\r\n\r\nconst formatProjectsOptions = (projects) => projects.map(p => ({\r\n    name: `${p.job_type} ${p.created ? formatDate(p.created) : ''}`,\r\n    id: p.id\r\n}))\r\nexport const Conversations = () => {\r\n    const {data, companies, projects, onChange, onMessageSend, messages} = useConversations();\r\n    const {projectId, companyId, message} = data;\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <div className={styles.selectWrapper}>\r\n                <Select\r\n                    className={'mb-1'}\r\n                    label={'Project'}\r\n                    options={formatProjectsOptions(projects)}\r\n                    onChange={onChange}\r\n                    name='projectId'\r\n                    value={projectId}/>\r\n                <Select\r\n                    className={'mb-1'}\r\n                    label={'Company'}\r\n                    options={companies}\r\n                    onChange={onChange}\r\n                    name='companyId'\r\n                    value={companyId}/>\r\n            </div>\r\n            <Chat messages={messages} inputMessage={message} onChange={onChange} onMessageSend={onMessageSend}/>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {Conversations} from \"../components/Conversations/Conversations\";\r\n\r\nexport const ConversationsPage = () => {\r\n    return (<Conversations/>)\r\n}","import React from 'react';\nimport './App.css';\n// import {BrowserRouter as Router, Switch} from \"react-router-dom\";\n/* TODO: Only for deployment purposes */\nimport {HashRouter as Router, Switch} from \"react-router-dom\";\nimport {routes} from \"./routes\";\nimport {LoginPage} from \"./pages/login\";\nimport {AppRoute} from \"./routes/AppRoute\";\nimport {MenuPage} from \"./pages/menu\";\nimport {MaintenanceRequestPage} from \"./pages/maintenance-request\";\nimport {RequestPreviewPage} from \"./pages/request-preview\";\nimport {ConversationsPage} from \"./pages/conversations\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <Switch>\n                    <AppRoute path={routes.home} component={MenuPage} exact />\n                    <AppRoute path={routes.login} component={LoginPage} isAuthProtected={false}/>\n                    <AppRoute path={routes.maintenanceRequest} component={MaintenanceRequestPage} />\n                    <AppRoute path={routes.requestPreview} component={RequestPreviewPage} />\n                    <AppRoute path={routes.conversations} component={ConversationsPage} />\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}